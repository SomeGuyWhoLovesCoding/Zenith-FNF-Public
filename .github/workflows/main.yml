# This is a basic workflow to help you get started with Actions

name: Build


# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main, experimental ]
  pull_request:
    branches: [ main, experimental ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  WindowsBuild:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.3.0

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install required haxelibs
        run: |
          haxelib setup C:/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib install hscript
          haxelib install Emitter
          haxelib install lime
          haxelib run lime setup
          haxelib install openfl
          haxelib install flixel
          haxelib install flixel-addons
        shell: cmd
      - name: Create version tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build windows --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'Zenith-FNF-Windows'
          path: export/release/windows/bin
  MacOSBuild:
    runs-on: macos-12

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install required haxelibs
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib install hscript
          haxelib install Emitter
          haxelib install lime
          haxelib run lime setup
          haxelib install openfl
          haxelib install flixel
          haxelib install flixel-addons
      - name: Create version tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build mac --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'Zenith-FNF-MacOS'
          path: export/release/macos/bin
  LinuxBuild:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install required haxelibs
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib install hscript
          haxelib install Emitter
          haxelib install lime
          haxelib run lime setup
          haxelib install openfl
          haxelib install flixel
          haxelib install flixel-addons
      - name: Create version tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: |
          haxelib run lime build Project.xml linux --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'Zenith-FNF-Linux'
          path: export/release/linux/bin
